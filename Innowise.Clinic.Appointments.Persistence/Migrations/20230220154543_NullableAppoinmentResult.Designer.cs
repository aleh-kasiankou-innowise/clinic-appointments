// <auto-generated />
using System;
using Innowise.Clinic.Appointments.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Innowise.Clinic.Appointments.Persistence.Migrations
{
    [DbContext(typeof(AppointmentsDbContext))]
    [Migration("20230220154543_NullableAppoinmentResult")]
    partial class NullableAppoinmentResult
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Innowise.Clinic.Appointments.Persistence.Models.Appointment", b =>
                {
                    b.Property<Guid>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppointmentResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReservedTimeSlotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecializationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("AppointmentResultId")
                        .IsUnique()
                        .HasFilter("[AppointmentResultId] IS NOT NULL");

                    b.HasIndex("ReservedTimeSlotId")
                        .IsUnique();

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Innowise.Clinic.Appointments.Persistence.Models.AppointmentResult", b =>
                {
                    b.Property<Guid>("AppointmentResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complaints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conclusion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentResultId");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.ToTable("AppointmentResults");
                });

            modelBuilder.Entity("Innowise.Clinic.Appointments.Persistence.Models.ReservedTimeSlot", b =>
                {
                    b.Property<Guid>("ReservedTimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentFinish")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentStart")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservedTimeSlotId");

                    b.ToTable("ReservedTimeSlots");
                });

            modelBuilder.Entity("Innowise.Clinic.Appointments.Persistence.Models.Appointment", b =>
                {
                    b.HasOne("Innowise.Clinic.Appointments.Persistence.Models.AppointmentResult", "AppointmentResult")
                        .WithOne()
                        .HasForeignKey("Innowise.Clinic.Appointments.Persistence.Models.Appointment", "AppointmentResultId")
                        .OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior.Restrict);

                    b.HasOne("Innowise.Clinic.Appointments.Persistence.Models.ReservedTimeSlot", "ReservedTimeSlot")
                        .WithOne()
                        .HasForeignKey("Innowise.Clinic.Appointments.Persistence.Models.Appointment", "ReservedTimeSlotId")
                        .OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppointmentResult");

                    b.Navigation("ReservedTimeSlot");
                });

            modelBuilder.Entity("Innowise.Clinic.Appointments.Persistence.Models.AppointmentResult", b =>
                {
                    b.HasOne("Innowise.Clinic.Appointments.Persistence.Models.Appointment", "Appointment")
                        .WithOne()
                        .HasForeignKey("Innowise.Clinic.Appointments.Persistence.Models.AppointmentResult", "AppointmentId")
                        .OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });
#pragma warning restore 612, 618
        }
    }
}
